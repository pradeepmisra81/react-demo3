{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","isValidTitle","setIsValidTitle","isValidAmount","setIsValidAmount","onSubmit","event","preventDefault","trim","length","expenseData","title","amount","date","Date","onSaveExpenseData","className","style","color","type","value","maxLength","placeholder","onChange","target","min","step","max","pattern","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpenseDate","month","toLocaleString","year","getFullYear","day","ExpenseItem","setTitle","enteredNewTitle","prompt","deletedItemId","keyId","onDelete","ExpensesList","items","deleteHandler","item","onDeleteItem","map","expense","ChartBar","barFillHeight","maxValue","round","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","itemId","onDeleteExpense","STATIC_EXPENSES","App","setExpenses","prevExpenses","expenseId","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88288fea.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n    const [isValidTitle, setIsValidTitle] = useState(true);\n    const [isValidAmount, setIsValidAmount] = useState(true);\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    }\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    }\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        if (enteredTitle.trim().length === 0 ) {\n            setIsValidTitle(false);\n            return;\n        }\n\n        if (enteredAmount.trim().length === 0 ) {\n            setIsValidAmount(false);\n            return;\n        }\n        //const amountNum = Math.floor(enteredAmount);\n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate)\n        };\n\n        props.onSaveExpenseData(expenseData);\n        \n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n    }\n\n    \n\n    return ( \n    <form onSubmit={submitHandler}>\n        <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n                <label style={{color: !isValidTitle ? \"red\":\"black\"}}>Title</label>\n                <input \n                type='text' \n                value={enteredTitle}\n                maxLength={50}\n                placeholder=\"Enter title\"\n                onChange={titleChangeHandler}\n                />\n            </div>\n            <div className=\"new-expense__control\">\n                <label style={{color: !isValidAmount ? \"red\":\"black\"}}>Amount</label>\n                <input \n                type='number' \n                min=\"0.01\" \n                step=\"0.01\" \n                value={enteredAmount}\n                max=\"10000000.00\"\n                pattern=\"[+-]?\\d+(?:[.,]\\d+)?\"\n                placeholder=\"Enter amount\"\n                onChange={amountChangeHandler}\n                />\n            </div>\n            <div className=\"new-expense__control\">\n                <label>Date</label>\n                <input \n                type='date' \n                min=\"2018-01-01\" \n                max=\"2022-12-31\" \n                value={enteredDate}\n                onChange={dateChangeHandler}\n                />\n            </div>\n        </div>\n        <div className=\"new-expense__actions\">\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n                <button type=\"submit\">Add Expense</button>\n        </div>\n    </form>\n    );\n};\n\nexport default ExpenseForm;","import React, {useState} from \"react\";\n\nimport \"./NewExpense.css\";\n\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n    const [isEditing,setIsEditing] = useState(false);\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n\n        const expenseData = {\n            id: Math.random().toString(),\n            ...enteredExpenseData\n        }\n        props.onAddExpense(expenseData);\n        setIsEditing(false);\n    }\n\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    }\n\n    const stopEditingHandler = () => {\n        setIsEditing(false);\n    }\n\n    return <div className=\"new-expense\">\n        {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n        {isEditing && (\n        <ExpenseForm \n        onSaveExpenseData={saveExpenseDataHandler}\n        onCancel={stopEditingHandler}\n        />\n        )}\n    </div>\n\n}\n\nexport default NewExpense;","import React from 'react';\nimport './Card.css'\n\nfunction Card(props) {\n    const classes = 'card ' + props.className;\n    return <div className={classes}>{props.children}</div>\n\n}\n\nexport default Card;","import './ExpenseDate.css';\n\nfunction ExpenseDate(props) {\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\n    const year = props.date.getFullYear();\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\n\n\n    return (\n        <div className='expense_date'>\n                <div className='expense-date__month'>{month}</div>\n                <div className='expense-date__year'>{year}</div>\n                <div className='expense-date__day'>{day }</div>\n            </div>\n    );\n}\n\nexport default ExpenseDate;","import React , { useState } from 'react';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nfunction ExpenseItem(props) {\n\n    //let title = props.title;\n    const [title, setTitle] = useState(props.title);\n\n    const clickHandler = () => {\n        const enteredNewTitle = prompt('Please enter new title of this expense item');\n        if (enteredNewTitle !== null && enteredNewTitle.length > 0) {\n        setTitle(enteredNewTitle);\n        }\n    };\n\n    const deleteItemHandler = () => {\n        const deletedItemId = props.keyId;\n        props.onDelete(deletedItemId);\n    };\n\n    return (\n        <Card className=\"expense-item\">\n            <ExpenseDate date={props.date}/>\n            <div className=\"expense-item__description\">\n            <h2>{title}</h2>\n            <div className=\"expense-item__price\">Rs. {props.amount}</div>\n            </div>\n            <div className=\"edit-expense button\">\n            <button type=\"button\" onClick={clickHandler}>Update Title</button>\n            </div>\n            <div className=\"delete-expense button\">\n            <button type=\"button\" onClick={deleteItemHandler}>Delete</button>\n            </div>\n            \n        </Card>\n    );\n}\n\nexport default ExpenseItem;","import React from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n    if(props.items.length === 0) {\n        return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>\n    };\n\n    const deleteHandler = (item) => {\n        props.onDeleteItem(item);\n    };\n\n    return <ul className=\"expenses-list\">\n        {props.items.map((expense) => (  \n        <ExpenseItem \n        key={expense.id}\n        keyId={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n        onDelete={deleteHandler}\n        />\n        ))}\n    </ul>\n}\n\nexport default ExpensesList;","import React from \"react\";\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n    let barFillHeight = '0%';\n\n    if (props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100)+ '%';\n    }\n\n    return (\n    <div className='chart-bar'>\n        <div className='chart-bar__inner'>\n            <div \n            className='chart-bar__fill' \n            style={{ height: barFillHeight }}\n            ></div>\n        </div>\n            <div className='chart-bar__label'>{props.label}</div>\n    </div>\n    );\n};\n\nexport default ChartBar;","import React from \"react\";\n\nimport './Chart.css';\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMax = Math.max(...dataPointValues);\n    \n    return (\n        <div className=\"chart\">\n        {props.dataPoints.map(dataPoint => (\n        <ChartBar \n        key={Math.random().toString + dataPoint.label}\n        value={dataPoint.value} \n        maxValue={totalMax}\n        label={dataPoint.label}\n        />\n        ))}\n        </div>\n    );\n}\n\nexport default Chart;","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        { label:'Jan', value:0 },\n        { label:'Feb', value:0 },\n        { label:'Mar', value:0 },\n        { label:'Apr', value:0 },\n        { label:'May', value:0 },\n        { label:'Jun', value:0 },\n        { label:'Jul', value:0 },\n        { label:'Aug', value:0 },\n        { label:'Sep', value:0 },\n        { label:'Oct', value:0 },\n        { label:'Nov', value:0 },\n        { label:'Dec', value:0 },\n    ];\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth(); // Startring from 0 for January\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n    return <Chart dataPoints={chartDataPoints}/>;\n}\n\nexport default ExpensesChart;","import React from 'react';\n\nimport Card from '../UI/Card';\nimport './Expenses.css';\n//import ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\n\nfunction Expenses(props) {\n    \n    const deleteExpenseItemHandler = (itemId) => {\n      props.onDeleteExpense(itemId);\n    }\n    // return (\n    //     <div>\n    //     <Card className='expenses'>\n    //     <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\n    //     <ExpensesChart expenses={updatedExpensesAfterDeletion}/>\n    //     <ExpensesList items={updatedExpensesAfterDeletion} onDeleteItem={deleteExpenseItemHandler}/>\n    //   </Card>\n    //   </div>\n    // );\n\n    return (\n      <div>\n      <Card className='expenses'>\n      <ExpensesChart expenses={props.items}/>\n      <ExpensesList items={props.items} onDeleteItem={deleteExpenseItemHandler}/>\n    </Card>\n    </div>\n  );\n\n}\n\nexport default Expenses;","import React, {useState} from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst STATIC_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Kitchen Item',\n    amount: 10000,\n    date: new Date(2019, 6, 20)\n  },\n  {\n    id: 'e2',\n    title: \"Ayushmaan's Tution Fees\",\n    amount: 6000,\n    date: new Date(2020, 7, 22)\n  },\n  {\n    id: 'e3',\n    title: 'House Rent',\n    amount: 12200,\n    date: new Date(2021, 11, 15)\n  },\n  {\n    id: 'e4',\n    title: 'Mobile Recharge',\n    amount: 1200,\n    date: new Date(2022, 0, 10)\n  },\n  {\n    id: 'e5',\n    title: 'Tatasky Recharge',\n    amount: 600,\n    date: new Date(2022, 0, 10)\n  },\n  {\n    id: 'e6',\n    title: 'Indane Gas Booking',\n    amount: 903,\n    date: new Date(2022, 0, 11)\n  },\n];\n\nconst App = () => {\n\n  const [expenses,setExpenses] = useState(STATIC_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n\n    setExpenses((prevExpenses) => {\n      let updatedExpenses = [expense,...prevExpenses];\n      return updatedExpenses;\n    });\n  };\n\n  const deleteExpenseHandler = expenseId => {\n    setExpenses(prevExpenses => {\n      const updatedExpenses = prevExpenses.filter(expense => expense.id !== expenseId);\n      return updatedExpenses;\n    });\n  };\n\n  return (\n    <div>\n      <h1>Expense Tracker</h1>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses} onDeleteExpense={deleteExpenseHandler}/>\n      <h2>Hi, Pradeep</h2>\n      <p>Let's start the Expense App in ReactJS</p>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}