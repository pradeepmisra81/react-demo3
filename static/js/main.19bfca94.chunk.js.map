{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","maxLength","placeholder","onChange","target","min","step","max","pattern","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","year","getFullYear","day","ExpenseItem","setTitle","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpense","filter","selectedYear","STATIC_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19bfca94.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    }\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    }\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        //const amountNum = Math.floor(enteredAmount);\n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate)\n        };\n\n        props.onSaveExpenseData(expenseData);\n        \n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n    }\n\n    \n\n    return ( \n    <form onSubmit={submitHandler}>\n        <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n                <label>Title</label>\n                <input \n                type='text' \n                value={enteredTitle}\n                maxLength={50}\n                placeholder=\"Enter title\"\n                onChange={titleChangeHandler}\n                />\n            </div>\n            <div className=\"new-expense__control\">\n                <label>Amount</label>\n                <input \n                type='number' \n                min=\"0.01\" \n                step=\"0.01\" \n                value={enteredAmount}\n                max=\"10000000.00\"\n                pattern=\"[+-]?\\d+(?:[.,]\\d+)?\"\n                placeholder=\"Enter amount\"\n                onChange={amountChangeHandler}\n                />\n            </div>\n            <div className=\"new-expense__control\">\n                <label>Date</label>\n                <input \n                type='date' \n                min=\"2021-01-01\" \n                max=\"2022-12-31\" \n                value={enteredDate}\n                onChange={dateChangeHandler}\n                />\n            </div>\n        </div>\n        <div className=\"new-expense__actions\">\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n                <button type=\"submit\">Add Expense</button>\n        </div>\n    </form>\n    );\n};\n\nexport default ExpenseForm;","import React, {useState} from \"react\";\n\nimport \"./NewExpense.css\";\n\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n    const [isEditing,setIsEditing] = useState(false);\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n\n        const expenseData = {\n            id: Math.random().toString(),\n            ...enteredExpenseData\n        }\n        props.onAddExpense(expenseData);\n        setIsEditing(false);\n    }\n\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    }\n\n    const stopEditingHandler = () => {\n        setIsEditing(false);\n    }\n\n    return <div className=\"new-expense\">\n        {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n        {isEditing && (\n        <ExpenseForm \n        onSaveExpenseData={saveExpenseDataHandler}\n        onCancel={stopEditingHandler}\n        />\n        )}\n    </div>\n\n}\n\nexport default NewExpense;","import React from 'react';\nimport './Card.css'\n\nfunction Card(props) {\n    const classes = 'card ' + props.className;\n    return <div className={classes}>{props.children}</div>\n\n}\n\nexport default Card;","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n      props.onChangeFilter(event.target.value);\n    \n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import './ExpenseDate.css';\n\nfunction ExpenseDate(props) {\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\n    const year = props.date.getFullYear();\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\n\n\n    return (\n        <div className='expense_date'>\n                <div className='expense-date__month'>{month}</div>\n                <div className='expense-date__year'>{year}</div>\n                <div className='expense-date__day'>{day }</div>\n            </div>\n    );\n}\n\nexport default ExpenseDate;","import React , { useState } from 'react';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nfunction ExpenseItem(props) {\n\n    //let title = props.title;\n    const [title, setTitle] = useState(props.title);\n\n    const clickHandler = () => {\n        setTitle(\"Updated !\");\n    }\n\n    return (\n        <Card className=\"expense-item\">\n            <ExpenseDate date={props.date}/>\n            <div className=\"expense-item__description\">\n            <h2>{title}</h2>\n            <div className=\"expense-item__price\">Rs. {props.amount}</div>\n            </div>\n            <button onClick={clickHandler}>Change Title</button>\n        </Card>\n    );\n}\n\nexport default ExpenseItem;","import React from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n    if(props.items.length === 0) {\n        return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>\n    };\n\n    return <ul className=\"expenses-list\">\n        {props.items.map((expense) => (\n        <ExpenseItem \n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n        />\n        ))}\n    </ul>\n}\n\nexport default ExpensesList;","import React from \"react\";\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n    let barFillHeight = '0%';\n\n    if (props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100)+ '%';\n    }\n\n    return (\n    <div className='chart-bar'>\n        <div className='chart-bar__inner'>\n            <div \n            className='chart-bar__fill' \n            style={{ height: barFillHeight }}\n            ></div>\n        </div>\n            <div className='chart-bar__label'>{props.label}</div>\n    </div>\n    );\n};\n\nexport default ChartBar;","import React from \"react\";\n\nimport './Chart.css';\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMax = Math.max(...dataPointValues);\n    \n    return (\n        <div className=\"chart\">\n        {props.dataPoints.map(dataPoint => (\n        <ChartBar \n        key={Math.random().toString + dataPoint.label}\n        value={dataPoint.value} \n        maxValue={totalMax}\n        label={dataPoint.label}\n        />\n        ))}\n        </div>\n    );\n}\n\nexport default Chart;","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        { label:'Jan', value:0 },\n        { label:'Feb', value:0 },\n        { label:'Mar', value:0 },\n        { label:'Apr', value:0 },\n        { label:'May', value:0 },\n        { label:'Jun', value:0 },\n        { label:'Jul', value:0 },\n        { label:'Aug', value:0 },\n        { label:'Sep', value:0 },\n        { label:'Oct', value:0 },\n        { label:'Nov', value:0 },\n        { label:'Dec', value:0 },\n    ];\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth(); // Startring from 0 for January\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n    return <Chart dataPoints={chartDataPoints}/>;\n}\n\nexport default ExpensesChart;","import React, {useState} from 'react';\n\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\n\nfunction Expenses(props) {\n\n    const [filteredYear,setFilteredYear] = useState('2021');\n\n    const filterChangeHandler = (selectedYear) => {\n      setFilteredYear(selectedYear);\n\n    }\n\n    const filteredExpense = props.items.filter( (expense) => {\n      return expense.date.getFullYear().toString() === filteredYear;\n    });\n\n    \n\n    return (\n        <div>\n        <Card className='expenses'>\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\n        <ExpensesChart expenses={filteredExpense}/>\n        <ExpensesList items={filteredExpense}/>\n      </Card>\n      </div>\n    );\n\n}\n\nexport default Expenses;","import React, {useState} from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst STATIC_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Kitchen Item',\n    amount: 10000,\n    date: new Date(2019, 6, 20)\n  },\n  {\n    id: 'e2',\n    title: \"Ayushmaan's Tution Fees\",\n    amount: 6000,\n    date: new Date(2020, 7, 22)\n  },\n  {\n    id: 'e3',\n    title: 'House Rent',\n    amount: 12200,\n    date: new Date(2021, 11, 15)\n  },\n  {\n    id: 'e4',\n    title: 'Mobile Recharge',\n    amount: 1200,\n    date: new Date(2022, 0, 10)\n  },\n  {\n    id: 'e5',\n    title: 'Tatasky Recharge',\n    amount: 600,\n    date: new Date(2022, 0, 10)\n  },\n  {\n    id: 'e6',\n    title: 'Indane Gas Booking',\n    amount: 903,\n    date: new Date(2022, 0, 11)\n  },\n];\n\nconst App = () => {\n\n  const [expenses,setExpenses] = useState(STATIC_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n\n    setExpenses((prevExpenses) => {\n      let updatedExpenses = [expense,...prevExpenses];\n      //console.log(\"In setExpenses\\n\");\n      //console.log(updatedExpenses);\n      return updatedExpenses;\n    });\n  };\n\n  //console.log(expenses);\n\n  return (\n    <div>\n      <h1>Expense Tracker</h1>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses}/>\n      <h2>Hi, Pradeep</h2>\n      <p>Let's start the Expense App in ReactJS</p>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}